int haha_main(int argc, char **argv)
{
    int fd = atoi(argv[argc-1]);
    mln_thread_msg_t msg;
    int nfds;
    fd_set rdset;
    for (;;) {
        FD_ZERO(&rdset);
        FD_SET(fd, &rdset);
        nfds = select(fd+1, &rdset, NULL, NULL, NULL);
        if (nfds < 0) {
            if (errno == EINTR) continue;
            mln_log(error, "select error. %s\n", strerror(errno));
            return -1;
        }
        memset(&msg, 0, sizeof(msg));
#if defined(WIN32)
        int n = recv(fd, (char *)&msg, sizeof(msg), 0);
#else
        int n = recv(fd, &msg, sizeof(msg), 0);
#endif
        if (n != sizeof(msg)) {
            mln_log(debug, "recv error. n=%d. %s\n", n, strerror(errno));
            return -1;
        }
        mln_log(debug, "!!!src:%S auto:%l char:%c\n", msg.src, msg.sauto, msg.c);
        mln_thread_clear_msg(&msg);
    }
    return 0;
}

